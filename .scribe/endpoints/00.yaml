name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'This field must be a valid email address.'
        required: true
        example: sigrid29@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'This field must be at least 6 characters.'
        required: true
        example: ',v[r=]G_e-Qa4'
        type: string
        custom: []
    cleanBodyParameters:
      email: sigrid29@example.org
      password: ',v[r=]G_e-Qa4'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d3ZP1k8ec45Eavgf6V6hDba'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'users/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve user information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      userId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P4c6Ehgka61Va3fDZev8d5b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'users/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      userId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field must be at least 10 characters. This field must not be greater than 60 characters.'
        required: false
        example: xl
        type: string
        custom: []
      email:
        name: email
        description: 'This field must be a valid email address. This field must be at least 10 characters. This field must not be greater than 60 characters.'
        required: false
        example: frederick77@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: xl
      email: frederick77@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bgPe54aV6fv31ZDad6cEkh8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'users/{userId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      userId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6e4hZ31aVdaf6vEPDgbc58k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'authors/{authorId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve author information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      authorId:
        name: authorId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      authorId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kfZ6vh8cEg135aebDd6VPa4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'authors/{authorId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update author information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      authorId:
        name: authorId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      authorId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'This field must be at least 6 characters. This field must not be greater than 60 characters.'
        required: false
        example: gvqzbybear
        type: string
        custom: []
      birthdate:
        name: birthdate
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: false
        example: 10/03/2023
        type: string
        custom: []
      nationality:
        name: nationality
        description: 'This field must be at least 5 characters. This field must not be greater than 60 characters.'
        required: false
        example: kqymixyytenaqlxs
        type: string
        custom: []
    cleanBodyParameters:
      name: gvqzbybear
      birthdate: 10/03/2023
      nationality: kqymixyytenaqlxs
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 48e6EDcfVd3habZv6gPak15'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'authors/{authorId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an author.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      authorId:
        name: authorId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      authorId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 631baeV6d5ckv8P4EDfghZa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'books/{bookId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve book information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      bookId:
        name: bookId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      bookId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 38Pa61gvDfZhd5k64cbeVEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'books/{bookId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update book information.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      bookId:
        name: bookId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      bookId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'This field must be at least 3 characters. This field must not be greater than 60 characters.'
        required: false
        example: pzctanhvhqptwwpcjjgz
        type: string
        custom: []
      publication_date:
        name: publication_date
        description: 'Must be a valid date in the format <code>d/m/Y</code>.'
        required: false
        example: 10/03/2023
        type: string
        custom: []
      isbn:
        name: isbn
        description: 'This field must be at least 13 characters. This field must not be greater than 13 characters.'
        required: false
        example: xuiqu
        type: string
        custom: []
      author_id:
        name: author_id
        description: ''
        required: false
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      title: pzctanhvhqptwwpcjjgz
      publication_date: 10/03/2023
      isbn: xuiqu
      author_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z5g3vbf6EdDa64cPehaV1k8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'books/{bookId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a book.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      bookId:
        name: bookId
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      bookId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abd54ea3fkE68VZPvD6c1gh'
    controller: null
    method: null
    route: null
    custom: []
